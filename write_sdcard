#!/usr/bin/env bash
set -eu -o pipefail

RASPBERRY_IMG="${1:-}"
if test -z "$RASPBERRY_IMG"; then
    echo "Usage: $0 raspberry.img"
    exit 1
fi

if [[ "$(id -u)" -ne 0 ]]; then
    sudo "$0" "$@"
    exit $?
fi

typeset -a DISK_LIST_READONLY

function get_disk_list() {
    diskutil list | grep -Eo "^/dev/disk[0-9]+"
}

function contains() {
    local -a _ARRAY=("${!1}")
    local _ELEMENT="$2"
    for _e in "${_ARRAY[@]}"; do
        [[ ! "$_e" == "$_ELEMENT" ]] || return 0
    done
    return 1
}

function find_sdcard() {
    local -a _DISKS=( $(get_disk_list) )
    for _D in "${_DISKS[@]}"; do
        if ! contains DISK_LIST_READONLY[@] "$_D"; then
            echo "$_D"
            return 0
        fi
    done
    return 1
}

function gen_write_sdcard_command() {
    local SDCARD="$1"
    echo "dd bs=1M if=\"$RASPBERRY_IMG\" of=\"$SDCARD\" conv=sync"
}

DISK_LIST_READONLY=( $(get_disk_list) )

echo "Will skip these disks: ${DISK_LIST_READONLY[*]}"

contains DISK_LIST_READONLY[@] /dev/disk0
contains DISK_LIST_READONLY[@] /dev/disk1 || true

RASPBERRY_IMG=/tmp/foo.img gen_write_sdcard_command /dev/disk9\
    | grep -E '^dd bs=1M if="/tmp/foo.img" of="/dev/disk9" conv=sync$' >/dev/null

if ! test -f "$RASPBERRY_IMG"; then
    echo "$RASPBERRY_IMG not exist."
    exit 1
fi

while true; do
    echo -n "Insert a new SD card, and will find it automaticly."$'\r'
    declare SDCARD
    SDCARD="$(find_sdcard || true)"
    test -z "$SDCARD" && sleep 2 && continue

    echo -e "\n\nFound a SD card $SDCARD\n"

    [[ "$SDCARD" == /dev/disk[2-9] ]]

    diskutil info "$SDCARD"

    for _LOOP in $(seq 15 -1 1); do
        echo -n "Will write to $SDCARD after $_LOOP seconds. Press Ctrl-C if you want to break."$'\r'
        sleep 1 || exit 2
    done

    echo -e "\nWriting to SD card $SDCARD ..."
    du -h "$RASPBERRY_IMG"
    echo "Press Ctrl-T to show the writing progress, the size of image is $(stat --printf='%s' "$RASPBERRY_IMG")"
    diskutil unmountDisk "$SDCARD"
    gen_write_sdcard_command "$SDCARD" | bash -x

    sleep 2
    diskutil eject "$SDCARD"

    type blink1 >/dev/null 2>&1 && blink1 green

    echo "Write to $SDCARD done and has been rejected."
    echo "Replace a new SD card now."
    echo ""
done
