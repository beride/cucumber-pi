#!/usr/bin/env bash
set -eu -o pipefail

# if [[ "$(id -u)" -ne 0 ]]; then
#     sudo "$0" "$@"
#     exit $?
# fi

typeset -a DISK_LIST_READONLY

function get_disk_list() {
    diskutil list | grep -Eo "^/dev/disk[0-9]+"
}

function contains() {
    local -a _ARRAY=("${!1}")
    local _ELEMENT="$2"
    for _e in "${_ARRAY[@]}"; do
        [[ ! "$_e" == "$_ELEMENT" ]] || return 0
    done
    return 1
}

function find_sdcard() {
    local -a _DISKS=( $(get_disk_list) )
    for _D in "${_DISKS[@]}"; do
        if ! contains DISK_LIST_READONLY[@] "$_D"; then
            echo "$_D"
            return 0
        fi
    done
    return 1
}

DISK_LIST_READONLY=( $(get_disk_list) )

echo "Will skip these disks: ${DISK_LIST_READONLY[*]}"

contains DISK_LIST_READONLY[@] /dev/disk0
contains DISK_LIST_READONLY[@] /dev/disk1 || true

while true; do
    echo -n "Insert a new SD card, and will find it automaticly."$'\r'
    declare SDCARD
    SDCARD="$(find_sdcard || true)"
    test -z "$SDCARD" && sleep 2 && continue

    echo -e "\n\nFound a SD card $SDCARD\n"

    [[ "$SDCARD" == /dev/disk[2-9] ]]

    BOOT_VOLUME="$(mount | grep -E "^${SDCARD}s1 " | cut -d' ' -f3)"
    echo "Found boot at $BOOT_VOLUME"
    if [[ -f "${BOOT_VOLUME}/ssh" ]]; then
        echo "${BOOT_VOLUME}/ssh has been exist."
    else
        touch "${BOOT_VOLUME}/ssh"
        echo "${BOOT_VOLUME}/ssh created."
    fi
    diskutil eject "$SDCARD"

    echo "Enable SSH on $SDCARD done and has been rejected."
    echo "Replace a new SD card now."
    echo ""
done
